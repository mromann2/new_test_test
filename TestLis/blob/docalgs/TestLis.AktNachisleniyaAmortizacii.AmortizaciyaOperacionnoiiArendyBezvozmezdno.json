{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n    const DOCMNEMO \u003d \u0027AktNachisleniyaAmortizacii_\u0027;\r\n    const DOCMODMNEMO \u003d MODULEMNEMO + \u0027.\u0027 + DOCMNEMO;\r\n    \r\n    if (notValid(currentDocument)) {\r\n        return notValid(currentDocument);\r\n    }\r\n        \r\n    for (let tableRec of currentDocument.getRows()){\r\n        //Проводка 1 - по фактуре \r\n        //Проводка по фактуре, сумма\u003dсумма амортизации\r\n        currentDocument.addPosting(createPostingWithProps({tableRec, docMnemo: DOCMODMNEMO}));         \r\n        \r\n        //Проводка2\r\n        //дебет \u003d 40140, КПС\u003dКПС КДБ из шапки, ЭКР\u003d182\r\n        //кредит\u003d40110, КПС\u003dКПС КДБ из шапки, ЭКР\u003d182 \r\n        //сумма\u003dсумма амортизации\r\n        let ekr182 \u003d EntityFactory.getCatalogs().get(MODULEMNEMO + \u0027.KOSGUEKR\u0027).findByCode(\u0027182\u0027).get(0);\r\n\r\n        let posting \u003d createPostingWithProps({tableRec, \r\n                                              docMnemo: DOCMODMNEMO,\r\n                                              debit: EntityFactory.getPlan().getAccounts().findByCode(\u002740140\u0027).get(0),\r\n                                              debitKps: currentDocument.get(DOCMODMNEMO + \u0027.hr.KPSKdb\u0027),\r\n                                              debitKosguEkr: ekr182, \r\n                                              credit: EntityFactory.getPlan().getAccounts().findByCode(\u002740110\u0027).get(0),\r\n                                              creditKps: currentDocument.get(DOCMODMNEMO + \u0027.hr.KPSKdb\u0027),\r\n                                              creditKosguEkr: ekr182, \r\n                                              summa: tableRec.get(DOCMODMNEMO + \u0027.tr.IzmenenieAmortizacii\u0027)\r\n                                             });\r\n        currentDocument.addPosting(posting);        \r\n    };\r\n\r\n    //устанавливаем текущую дату проводки\r\n    currentDocument.setExecuted();\r\n    //устанавливаем сумму операции\r\n    currentDocument.setOperationSum(getCalculatedSum(currentDocument, DOCMODMNEMO + \u0027.tr.IzmenenieAmortizacii\u0027));\r\n    //сохранение документа с проводками\r\n    currentDocument.save();\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "TestLis.AktNachisleniyaAmortizacii.AmortizaciyaOperacionnoiiArendyBezvozmezdno",
    "title": {
      "ru_RU": "Амортизация операционной аренды безвозмездно",
      "en_EN": "Amortizaciya operacionnoii arendy bezvozmezdno"
    },
    "description": {}
  }
}