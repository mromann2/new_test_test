{
  "script": {
    "title": "script",
    "sources": "//     Проводка 1 - по фактуре, сумма \u003d стоимость\r\n//\r\n//     Проводка 2 \u003d \r\n//              Дебет \u003d Новый счет ОС, КПС\u003dКПС кредита, аналитика \u003dаналитика из Кредит,\r\n//                             КОСГУ \u003d КОСГУ дебет из плана\r\n//              Кредит \u003d счет дебет из фактуры, КПС\u003dКПС дебет, аналитика\u003dиз Дебет\r\n//                             сумма \u003d стоимость\r\n//\r\n//     Проводка 3 \u003d условие \u003d сумма амортизации больше 0\r\n//              Дебет \u003d Счет амортизации для счета кредит из соответствия,\r\n//                             КПС\u003dКПС кредит, КОСГУ\u003dКОСГУ дебет из плана, аналитика\u003dиз кредит\r\n//              Кредит \u003d счет дебет из фактуры, КПС\u003dКПС дебет, аналитика\u003dиз Дебет\r\n//                             сумма \u003d сумма амортизации\r\n//\r\n//     Проводка 4 \u003d условие \u003d сумма амортизации больше 0\r\n//              Дебет \u003d счет дебет из фактуры, КПС\u003dКПС дебет, аналитика\u003dиз Дебет\r\n//              Кредит \u003d Счет амортизации для счета \"Новый счет ОС\" из соответствия,\r\n//                             КПС\u003dКПС кредит, КОСГУ\u003dКОСГУ кредит из плана, аналитика\u003dиз кредит\r\n//Проведение документа\r\nfunction activate(currentDocument) {\r\n    let resultValidate \u003d notValid(currentDocument);\r\n    if (resultValidate) {\r\n        return resultValidate;\r\n    }\r\n    let docMnemo \u003d currentDocument.getMnemo();\r\n        \r\n    for (let tableRec of currentDocument.getRows()){\r\n        //Проводка 1 - по фактуре \r\n        //добавление проводки\r\n        currentDocument.addPosting(createPostingWithProps({tableRec, docMnemo}));         \r\n        \r\n        \r\n        //Проводка 2 - условие \u003d кредит \u003d 40110\r\n        //       Дебет \u003d 40110, КПС\u003dКПС кредита фактуры, аналитика \u003d аналитика из кредита\r\n        //       Кредит \u003d 30304, КПС\u003dКПС для счета 30304 из шапки (новое поле),\r\n        //                       КОСГУ \u003d КОСГУ кредит из плана счетов\r\n        //       сумма \u003d сумма НДС\r\n        if (tableRec.get(docMnemo + \u0027.tr.Kredit\u0027).getCode() \u003d\u003d \u002740110\u0027) {\r\n            let acc40110 \u003d EntityFactory.getPlan().getAccounts().findByCode(\u002740110\u0027).get(0);\r\n            \r\n            // for .getAnalytics(); ????\r\n            acc40110.put(0, tableRec.get(docMnemo + \u0027.tr.Kredit\u0027).get(0));\r\n            \r\n            \r\n            let posting \u003d createPostingWithProps({tableRec, \r\n                                                  docMnemo,\r\n                                                  debit: acc40110,\r\n                                                  debitKps: tableRec.get(docMnemo + \u0027.tr.KPSKr\u0027),\r\n                                                  credit: EntityFactory.getPlan().getAccounts().findByCode(\u002730304\u0027).get(0),\r\n                                                  creditKps: currentDocument.get(docMnemo + \u0027.hr.KPSDlyaScheta334\u0027),\r\n                                                  creditKosgu: EntityFactory.getPlan().getAccounts().findByCode(\u002730304\u0027).get(0).getKOSGUCredit(), \r\n                                                  summa: tableRec.get(docMnemo + \u0027.tr.SummaNDS\u0027)\r\n                                                 });\r\n            currentDocument.addPosting(posting);\r\n        }\r\n    };\r\n    //проверка проводок\r\n    let resultValidate \u003d hasNotValidPostings(currentDocument);\r\n    if (resultValidate) {\r\n        return resultValidate;\r\n    }\r\n    //устанавливаем текущую дату проводки\r\n    currentDocument.setExecuted();\r\n    //устанавливаем сумму операции\r\n    currentDocument.setOperationSum(getCalculatedSum(currentDocument, docMnemo + \u0027.tr.VsegoSNDS\u0027));\r\n    //сохранение документа с проводками\r\n    currentDocument.save();\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "TestLis.SmenaSchetaOS_.SmenaSchetaCHerezTranzitnyiiSchet",
    "title": {
      "ru_RU": "Смена счета через транзитный счет",
      "en_EN": "Smena scheta cherez tranzitnyii schet"
    },
    "description": {}
  }
}