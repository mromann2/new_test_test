{
  "script": {
    "title": "script",
    "sources": "function activate(currentDocument) {\r\n    \r\n    let subjectRegisterMnemo \u003d MODULEMNEMO + \u0027.Nagrazhdennye\u0027;\r\n    let subjectRegister \u003d Register.get(subjectRegisterMnemo);\r\n    let registerMnemo \u003d MODULEMNEMO + \u0027.Nagrazhdeniya\u0027;\r\n    let register \u003d Register.get(registerMnemo);\r\n    let cancelRegister \u003d Register.get(registerMnemo);\r\n    \r\n    //заполнение данных шаблонов\r\n    for (let record of subjectRegister) {\r\n        let subject \u003d record.getDimension(subjectRegisterMnemo + \u0027.dm.Nagrazhdennyii\u0027);\r\n        let collection \u003d register.find({\r\n            Dimensions: {[registerMnemo + \u0027.dm.Nagrazhdennyii\u0027]: subject,\r\n                        [registerMnemo + \u0027.dm.TipNagrazhdennogo\u0027]: \u0027Юридическое лицо\u0027,\r\n                        [registerMnemo + \u0027.dm.MestoRaboty\u0027]: currentDocument.get(\u0027Module.00.hr.MestoRaboty\u0027),\r\n                        //[registerMnemo + \u0027.dm.SferaDeyatelnosti\u0027]: null\r\n    //                    [registerMnemo + \u0027.dm.Podrazdelenie\u0027]: subdivisionFilter,\r\n    //                    [registerMnemo + \u0027.dm.Kategoriya\u0027]: categoryFilter,\r\n    //                    [registerMnemo + \u0027.dm.Nagrada\u0027]: rewardFilter,\r\n    //                    [registerMnemo + \u0027.dm.VidNagrady\u0027]: rewardTypeFilter\r\n            },\r\n            Requisites: {[registerMnemo + \u0027.rg.Otozvana\u0027]: false }\r\n        });\r\n        \r\n        \r\n        return collection;\r\n        \r\n\r\n        //if (collection.size()) {\r\n        /*let usl \u003d false;\r\n        \r\n        for (let record of collection) {\r\n            usl \u003d true;\r\n            return usl;\r\n            break;\r\n        }\r\n        if (false) {\r\n            for (let record of collection) {\r\n                //return record;\r\n                return record.getDimension(registerMnemo + \u0027.dm.SferaDeyatelnosti\u0027);\r\n                \r\n                let sphere \u003d record.getDimension(registerMnemo + \u0027.dm.SferaDeyatelnosti\u0027)?.getTitle() ?? \u0027\u0027;\r\n                let reward \u003d record.getDimension(registerMnemo + \u0027.dm.Nagrada\u0027);\r\n                let orderNumber \u003d record.getRequisite(registerMnemo + \u0027.rg.NomerPrikaza\u0027);\r\n                let orderDate \u003d formatDate(record.getRequisite(registerMnemo + \u0027.rg.DataPrikaza\u0027));\r\n                let order \u003d orderNumber + \u0027 от \u0027 + orderDate; \r\n            }\r\n        }*/\r\n    }\r\n    \r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "Module.00.Test",
    "title": {
      "ru_RU": "Тест",
      "en_EN": "Test"
    },
    "description": {}
  }
}