{
  "periodictype": "ForAllDocumentsThatType",
  "autonumerizer": true,
  "numeratortype": "Text",
  "length": 64,
  "uniquecontrol": true,
  "acceptaccountingprocessing": false,
  "automovedeletion": false,
  "autorownumerizer": true,
  "accounting": false,
  "calculation": false,
  "operationalaccounting": false,
  "createoperation": "Always",
  "headerrequsites": [
    {
      "meta": {
        "mnemo": "Module.HodataiistvaONagrazhdenii.hr.KtoHodataiistvuet",
        "title": {
          "ru_RU": "Кто ходатайствует",
          "en_EN": "Kto hodataiistvuet"
        },
        "description": {}
      },
      "type": {
        "mnemo": "primitive.text"
      },
      "properties": {
        "unlimited": "false",
        "length": "300"
      },
      "required": true
    },
    {
      "meta": {
        "mnemo": "Module.HodataiistvaONagrazhdenii.hr.KontaktnayaInformaciya",
        "title": {
          "ru_RU": "Контактная информация",
          "en_EN": "Kontaktnaya informaciya"
        },
        "description": {}
      },
      "type": {
        "mnemo": "primitive.text"
      },
      "properties": {
        "unlimited": "false",
        "length": "300"
      },
      "required": false
    }
  ],
  "tablerequsites": [
    {
      "meta": {
        "mnemo": "Module.HodataiistvaONagrazhdenii.tr.Nagrazhdaemyii",
        "title": {
          "ru_RU": "Награждаемый",
          "en_EN": "Nagrazhdaemyii"
        },
        "description": {}
      },
      "type": {
        "mnemo": "Module.SubektyNagrazhdeniya"
      },
      "properties": {},
      "required": true
    },
    {
      "meta": {
        "mnemo": "Module.HodataiistvaONagrazhdenii.tr.Nagrada",
        "title": {
          "ru_RU": "Награда",
          "en_EN": "Nagrada"
        },
        "description": {}
      },
      "type": {
        "mnemo": "Module.Nagrady"
      },
      "properties": {},
      "required": true
    },
    {
      "meta": {
        "mnemo": "Module.HodataiistvaONagrazhdenii.tr.OsnovanieNagrazhdeniya",
        "title": {
          "ru_RU": "Основание награждения",
          "en_EN": "Osnovanie nagrazhdeniya"
        },
        "description": {}
      },
      "type": {
        "mnemo": "Module.MotivyNagrazhdeniya"
      },
      "properties": {},
      "required": false
    }
  ],
  "basedondocuments": {
    "isthebasis": [
      {
        "mnemo": "Module.PrikazyONagrazhdenii"
      }
    ],
    "maybethebasisforanykind": false
  },
  "formdescription": {
    "script": {
      "title": "script",
      "sources": ""
    }
  },
  "formdocument": {
    "script": {
      "title": "script",
      "sources": ""
    }
  },
  "script": {
    "title": "Скрипт документа Ходатайства о награждении",
    "sources": "/*function preSave(currentDocument) {\r\n    let docMnemo \u003d currentDocument.getMnemo();\r\n    \r\n    for (let tableRec of currentDocument.getRows()){\r\n        let user \u003d tableRec.get(docMnemo + \u0027.tr.Nagrazhdaemyii\u0027);\r\n        //let tip \u003d user.get(MODULEMNEMO + \u0027.SubektyNagrazhdeniya.TipNagrazhdaemogo\u0027);\r\n        \r\n        //return tip;\r\n        //tableRec.set(docMnemo + \u0027.tr.TipNagrazhdaemogo\u0027, tableRec.get(docMnemo + \u0027.tr.Nagrazhdaemyii\u0027).get(MODULEMNEMO + \u0027.SubektyNagrazhdeniya.TipNagrazhdaemogo\u0027));\r\n    }\r\n    \r\n    //Не разрешать добавлять награждаемых, если ФИО, тип награждаемого и награда совпадают. Выдать сообщение: \"Награждаемый уже существует в проекте награждения\".\r\n    \r\n    //Валидация\r\n    let resultValidate \u003d currentDocument.validate();\r\n    \r\n    if (!currentDocument.getRows().size()){\r\n        resultValidate.addValueError(\u0027Не заполнена табличная часть документа.\u0027);\r\n        return resultValidate;\r\n    }\r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors()) {\r\n        return  resultValidate;\r\n    }\r\n}*/\r\n\r\n/*function preSave(currentDocument) {\r\n    let resultValidate \u003d currentDocument.validate();\r\n    \r\n    if (!currentDocument.getRows().size()){\r\n        resultValidate.addValueError(\u0027Не заполнена табличная часть документа.\u0027);\r\n        return resultValidate;\r\n    }\r\n    \r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() )\r\n        return  resultValidate;\r\n}*/"
  },
  "algorithms": [],
  "printedformset": [],
  "grants": {},
  "meta": {
    "mnemo": "Module.HodataiistvaONagrazhdenii",
    "title": {
      "ru_RU": "Ходатайства о награждении",
      "en_EN": "Hodataiistva o nagrazhdenii"
    },
    "description": {}
  }
}