{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n    if (!notValid(currentDocument)) {\r\n        for (let tableRec of currentDocument.getRows()){\r\n            let summa \u003d tableRec.get(\u0027tap.AktyObOkazaniiUslug.tr.Summa\u0027);\r\n            let description \u003d currentDocument.get(\u0027tap.AktyObOkazaniiUslug.tr.SoderzhanieUslugi\u0027);\r\n            \r\n            //Оказание услуг\r\n            /*let posting \u003d EntityFactory.createPosting();\r\n            posting.setComment(\"Реализация услуги \" + description);\r\n            posting.setValue(summa);\r\n\r\n            //счет Дб 205 - 209 (Кпс, кфо из табличной части, кэк из счета)- пока без проверки соответствия кэк-счет\r\n            let debit \u003d tableRec.get(\u0027tap.AktyObOkazaniiUslug.hr.SchetRaschetov\u0027);\r\n            // по сотруднику ищем контрагента и записываем в аналитику\r\n            debit.put(0, EntityFactory.getCatalogs().get(\"tap.Kontragenty\").findByRequisite(\u0027tap.Kontragenty.YAvlyaetsyaSotrudnikomOrganizacii\u0027, worker).get(0)); //Аналитика 1: Контрагент - сотрудник\r\n            posting.setDebit(debit);\r\n            \r\n            //счет Кр 401.10 (Кпс из шапки, кэк из счета, кфо из табличной части)\r\n            let credit \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027);\r\n            posting.setCredit(credit);\r\n            currentDocument.addPosting(posting);*/\r\n        }\r\n        \r\n        \r\n\r\n        /*let osnovanie \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Osnovanie\u0027)?.getTitle();\r\n        \r\n        for (let tableRec of currentDocument.getRows()){\r\n            let summa \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Summa\u0027);\r\n            let worker \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Sotrudnik\u0027);\r\n             \r\n        //Основная проводка\r\n            let posting \u003d EntityFactory.createPosting();\r\n            posting.setComment(osnovanie);\r\n            posting.setValue(summa);\r\n\r\n            //счет Дб 208 (Кпс, кфо из табличной части, кэк из счета)\r\n            let debit \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.SchetDebeta\u0027);\r\n            // по сотруднику ищем контрагента и записываем в аналитику\r\n            debit.put(0, EntityFactory.getCatalogs().get(\"tap.Kontragenty\").findByRequisite(\u0027tap.Kontragenty.YAvlyaetsyaSotrudnikomOrganizacii\u0027, worker).get(0)); //Аналитика 1: Контрагент - сотрудник\r\n            posting.setDebit(debit);\r\n            \r\n            //счет Кр 201.34 (Кпс из шапки, кэк из счета, кфо из табличной части)\r\n            let credit \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027);\r\n            posting.setCredit(credit);\r\n            currentDocument.addPosting(posting);\r\n        }*/\r\n        \r\n        currentDocument.setExecuted();\r\n        currentDocument.save();\r\n    \r\n        return;  \r\n    } else \r\n        return notValid(currentDocument);\r\n}\r\n\r\n\r\n//Снятие документа с проведения\r\nfunction deactivate(currentDocument) {\r\n    currentDocument.removeAllPostings();\r\n    currentDocument.setExecutedDate(null);\r\n    currentDocument.save();\r\n    return;\r\n}\r\n\r\n//Проверка документа на полное заполнение\r\nfunction notValid(currentDocument) { \r\n    let resultValidate \u003d currentDocument.validate();\r\n    \r\n    //КЭК обязательный\r\n    if (!currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.KEK\u0027))\r\n        resultValidate.addValueError(\u0027tap.AktyObOkazaniiUslug.hr.KEK\u0027, \u0027Не заполнено обязательное поле\u0027);\r\n    \r\n    //КЭК \u003d 110-114 120-129 12A 12К 12Т 130-139 180-182 185-187 189 18К 18Т\r\n    let setKEK \u003d [\u0027110\u0027, \u0027111\u0027, \u0027112\u0027, \u0027113\u0027, \u0027114\u0027, \u0027120\u0027, \u0027121\u0027, \u0027122\u0027, \u0027123\u0027, \u0027124\u0027, \u0027125\u0027, \u0027126\u0027, \u0027127\u0027, \u0027128\u0027, \u0027129\u0027, \u002712A\u0027, \u002712K\u0027, \u002712T\u0027, \u0027130\u0027,\r\n        \u0027131\u0027, \u0027132\u0027, \u0027133\u0027, \u0027134\u0027, \u0027135\u0027, \u0027136\u0027, \u0027137\u0027, \u0027138\u0027, \u0027139\u0027, \u0027180\u0027, \u0027181\u0027, \u0027182\u0027, \u0027185\u0027, \u0027186\u0027, \u0027187\u0027, \u0027189\u0027, \u002718K\u0027, \u002718T\u0027];\r\n    if (currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.KEK\u0027) \u0026\u0026 !setKEK.includes(currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.KEK\u0027).getCode()))\r\n        resultValidate.addValueError(\u0027tap.AktyObOkazaniiUslug.hr.KEK\u0027, \u0027Код должен быть одним из: 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 12A, 12K, 12T, 130,131, 132, 133, 134, 135, 136, 137, 138, 139, 180, 181, 182, 185, 186, 187, 189, 18K, 18T.\u0027);\r\n        \r\n    //Счет расчетов обязательный\r\n    if (!currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.SchetRaschetov\u0027))\r\n        resultValidate.addValueError(\u0027tap.AktyObOkazaniiUslug.hr.SchetRaschetov\u0027, \u0027Не заполнено обязательное поле\u0027);\r\n    \r\n    //Счет расчетов в зависимости от КЭК по спр соответствий\r\n    \r\n     \r\n    \r\n    //Счет доходов обязательный\r\n    if (!currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.SchetDohodov\u0027))\r\n        resultValidate.addValueError(\u0027tap.AktyObOkazaniiUslug.hr.SchetDohodov\u0027, \u0027Не заполнено обязательное поле\u0027);\r\n    \r\n    //Счет доходов 410.10 410.18 410.19\r\n    /*if (currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.SchetDohodov\u0027) {\r\n        \r\n        currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.SchetDohodov\u0027).getCode().substr(18,5) !\u003d\u003d \u002741010\u0027)\r\n            resultValidate.addValueError(\u0027tap.AktyObOkazaniiUslug.hr.SchetDohodov\u0027, \u0027Не заполнено обязательное поле\u0027);\r\n    }*/\r\n    \r\n    \r\n    \r\n    //Документ исполнен\r\n    /*if (!currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Ispolnen\u0027))\r\n        resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Ispolnen\u0027, \u0027Документ должен быть исполнен\u0027);\r\n    //счет Касса \u003d 201.34 по ЕПСБУ\r\n    if (currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027) \u0026\u0026\r\n        currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027).getCode().substr(18,5) !\u003d\u003d \u002720134\u0027)\r\n            resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027, \u0027Счет должен принимать значение 201.34.\u0027);\r\n    //счет Расчеты с подотчет лицами из 208 группы\r\n    if (currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027) \u0026\u0026\r\n        currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027).getCode().substr(18,3) !\u003d\u003d \u0027208\u0027)\r\n            resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027, \u0027Счет должен относиться к 208 группе счетов.\u0027);\r\n    \r\n    //Сумма \u003d Распределено \u003d Выплачено\r\n    let sum1 \u003d +currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Summa\u0027);\r\n    let sum2 \u003d +currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Raspredeleno\u0027);\r\n    let sum3 \u003d +currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Vyplacheno\u0027);\r\n    if (sum1 \u0026\u0026 sum2 \u0026\u0026 sum3 \u0026\u0026 (sum1 !\u003d\u003d sum2 || sum1 !\u003d\u003d sum3))\r\n        resultValidate.addValueError(\u0027Значения полей \"Сумма\", \"Распределено\" и \"Выплачено\" должны совпадать\u0027);\r\n    \r\n    */\r\n    if (!currentDocument.getRows().size())\r\n        resultValidate.addValueError(\u0027Не заполнена табличная часть документа.\u0027);\r\n    else {\r\n        \r\n        \r\n        /*let sum \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Vyplacheno\u0027);\r\n        let result \u003d 0.00;\r\n        \r\n        for (let tableRec of currentDocument.getRows()){\r\n            // проверка наличия контрагента по данному сотруднику\r\n            let worker \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Sotrudnik\u0027)\r\n            if (worker \u0026\u0026 EntityFactory.getCatalogs().get(\"tap.Kontragenty\").findByRequisite(\u0027tap.Kontragenty.YAvlyaetsyaSotrudnikomOrganizacii\u0027, worker).size() \u003d\u003d 0)\r\n                resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Sotrudnik\u0027, \u0027По сотруднику \u0027 + worker.getTitle() + \u0027 не найдено записей в справочнике \"Контрагенты\".\u0027);\r\n            \r\n            // Проверка выплачено\r\n            if (tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Vyplacheno\u0027) !\u003d null) {\r\n                if (!tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Vyplacheno\u0027))\r\n                    resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Vyplacheno\u0027, \u0027По всем сотрудникам должна стоять отметка о выплате\u0027);\r\n            }\r\n            result +\u003d +tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Summa\u0027);\r\n        } */ \r\n    }\r\n    \r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() ) \r\n        return  resultValidate;\r\n}\r\n\r\nfunction accountOnKEK(currentDocument) {\r\n    numberKek \u003d currentDocument.get(\u0027tap.AktyObOkazaniiUslug.hr.KEK\u0027).getCode();\r\n    return EntityFactory.getCatalogs().get(\"tap.SootvetstviyaAnaliticheskihSchetovKEK\").findByTitle(numberKek).get(0).get(\u0027tap.SootvetstviyaAnaliticheskihSchetovKEK.Schet\u0027);\r\n\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.AktyObOkazaniiUslug.RealizaciyaUslug2529411",
    "title": {
      "ru_RU": "Реализация услуг (205, 209 - 401.10)",
      "en_EN": "Realizaciya uslug 25 29  411"
    },
    "description": {}
  }
}