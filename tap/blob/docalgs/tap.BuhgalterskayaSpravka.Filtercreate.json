{
  "script": {
    "title": "script",
    "sources": "function activate(cc){\r\n    \r\n    //let d1 \u003d EntityFactory.getDocuments().get(\"tap.BuhgalterskayaSpravka\").get(0);\r\n    let acc \u003d cc.get(\u0027tap.BuhgalterskayaSpravka.hr.Spravochnik2\u0027)\r\n    let acc2 \u003d cc.get(\u0027tap.BuhgalterskayaSpravka.hr.Schet2\u0027)\r\n    let acc3 \u003d cc.get(\u0027tap.BuhgalterskayaSpravka.hr.Schet3\u0027)\r\n    let acc4 \u003d cc.get(\u0027tap.BuhgalterskayaSpravka.hr.Schet4\u0027)\r\n    let myReg \u003d Register.get(\"tap.Testovyii2\")\r\n    \r\n    let condition \u003d  \r\n        {   Dimensions: {\r\n                \"tap.Testovyii2.dm.1\": acc,\r\n            },\r\n//            Requisites: {\r\n//                \"tap.Testovyii2.rg.3\": acc3, \"tap.Testovyii2.rg.4\": acc4,\r\n//            },\r\n            ignoreAnalytics: false, \r\n        };\r\n        \r\n//        let condition2 \u003d  {\r\n//             Requisites: {\r\n//                \"tap.Testovyii2.rg.3\": \u00271\u0027,\r\n//            },\r\n//        }\r\n        \r\n        let collection\u003dmyReg.find(condition)\r\n//      let collection2 \u003d collection.find(condition2)\r\n\r\n                 return collection.size()\r\n//let x \u003d []\r\n//for (let rec of collection ){\r\n//    x.push(rec.getRequisite(\u0027tap.Testovyii2.rg.3\u0027))\r\n//}\r\n//for(let record of collection){\r\n//    console.log(record.getRequisite(\u0027tap.Testovyii2.rg.3\u0027))\r\n//}\r\n\r\nreturn collection.size() //[...collection].map(reg \u003d\u003e reg.getDate())\r\n//[collection[0].getDimension(\u0027tap.Testovyii2.dm.1\u0027).getAnalytics().get(0)?.getCode(), collection[1].getDimension(\u0027tap.Testovyii2.dm.1\u0027).getAnalytics().get(1)?.getCode(), \r\n//    collection[2].getDimension(\u0027tap.Testovyii2.dm.1\u0027).getAnalytics().get(0)?.getCode()]\r\n//cc.set(\u0027tap.BuhgalterskayaSpravka.hr.Spravochnik2\u0027, collection[2].getRequisite(\u0027tap.Testovyii2.rg.3\u0027))\r\n//    cc.save()\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.BuhgalterskayaSpravka.Filtercreate",
    "title": {
      "ru_RU": "filter.create",
      "en_EN": "filtercreate"
    },
    "description": {}
  }
}