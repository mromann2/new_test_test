{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n\r\n   if (!notValid(currentDocument)) {\r\n\r\n        for (let tableRec of currentDocument.getRows()){\r\n\r\n            //создание и заполнение проводки\r\n            let posting \u003d EntityFactory.createPosting(); \r\n            posting.setComment(\u0027Начислен НДС в бюджет\u0027);\r\n            posting.setValue(tableRec.get(\u0027tap.SchetFaktura.tr.NDS\u0027));\r\n            posting.setDebit(tableRec.get(\u0027tap.SchetFaktura.tr.SchetDt\u0027));\r\n            posting.setCredit(tableRec.get(\u0027tap.SchetFaktura.tr.Schet30304\u0027));\r\n            posting.setProperty(KFO, currentDocument.get(\u0027tap.SchetFaktura.hr.KFO\u0027).getCode());\r\n            posting.setDebitProperty(KPS, tableRec.get(\u0027tap.SchetFaktura.tr.KPSDb\u0027).getCode());\r\n            posting.setCreditProperty(KPS, tableRec.get(\u0027tap.SchetFaktura.tr.KPS334\u0027).getCode());\r\n            posting.setDebitProperty(KOSGU, tableRec.get(\u0027tap.SchetFaktura.tr.KOSGUDb\u0027).getCode());\r\n            posting.setCreditProperty(KOSGU, tableRec.get(\u0027tap.SchetFaktura.tr.KOSGU334\u0027).getCode());\r\n            currentDocument.addPosting(posting);\r\n        };\r\n                \r\n        //устанавливаем текущую дату проводки\r\n        currentDocument.setExecuted();\r\n\r\n        //сохранение документа с проводками\r\n        currentDocument.save();\r\n\r\n        return;  \r\n        \r\n    } else \r\n        return notValid(currentDocument);\r\n}\r\n\r\n//Снятие документа с проведения\r\nfunction deactivate(currentDocument) {\r\n    \r\n    //удаляем старые проводки\r\n    currentDocument.removeAllPostings();\r\n    //обнуляем дату проводки\r\n    currentDocument.setExecutedDate(null);\r\n    currentDocument.save();\r\n    return;\r\n}\r\n\r\n//Проверка документа на полное заполнение\r\nfunction notValid(currentDocument) {\r\n    let resultValidate \u003d currentDocument.validate();\r\n \r\n    if (!currentDocument.getRows().size())\r\n        resultValidate.addValueError(\u0027Не заполнена табличная часть документа.\u0027);\r\n    \r\n    //Проверки\r\n    if (!resultValidate.hasErrors())  {\r\n            \r\n        let prichina \u003d currentDocument.get(\"tap.SchetFaktura.hr.PrichinaNalogooblozheniya\").toString();\r\n        if (prichina !\u003d \u0027Аванс полученный (лом, шкуры, п.8, ст.161)\u0027\r\n                \u0026\u0026 prichina !\u003d \u0027Реализация по ставке 0%\u0027 \r\n                \u0026\u0026 prichina !\u003d \u0027Реализация лома, шкур (п.8, ст.161)\u0027){\r\n            \r\n            for (let tableRec of currentDocument.getRows()){\r\n                let schetDt \u003d tableRec.get(\u0027tap.SchetFaktura.tr.SchetDt\u0027);\r\n                let schet30304 \u003d tableRec.get(\u0027tap.SchetFaktura.tr.Schet30304\u0027);\r\n\r\n                if (!tableRec.get(\u0027tap.SchetFaktura.tr.NDS\u0027))\r\n                   resultValidate.addValueError(\u0027tap.SchetFaktura.tr.NDS\u0027, \u0027Не заполнено обязательное поле \"НДС\" в табличной части.\u0027);\r\n                if (!tableRec.get(\u0027tap.SchetFaktura.tr.SchetDt\u0027))\r\n                    resultValidate.addValueError(\u0027tap.SchetFaktura.tr.SchetDt\u0027, \u0027Не заполнено обязательное поле \"Счет Дт\" в табличной части.\u0027);\r\n                /*else {\r\n                    if (schetKt.getCode().substr(18,5) !\u003d\u003d \u002730304\u0027)\r\n                        resultValidate +\u003d \u0027\\nНомер счета в поле \"Счет 303.04\" в табличной части должен принадлежать группе счетов 303.04\u0027;\r\n                }*/\r\n\r\n                if (!tableRec.get(\u0027tap.SchetFaktura.tr.Schet30304\u0027))\r\n                    resultValidate.addValueError(\u0027tap.SchetFaktura.tr.Schet30304\u0027, \u0027Не заполнено обязательное поле \"Счет 303.04\" в табличной части.\u0027);\r\n                else {\r\n                    if (schet30304.getCode().substr(0,5) !\u003d\u003d \u002730304\u0027)\r\n                        resultValidate.addValueError(\u0027tap.SchetFaktura.tr.Schet30304\u0027, \u0027Номер счета в поле \"Счет 303.04\" в табличной части должен быть равен 303.04\u0027);\r\n                    else {\r\n                        /*if (!schet30304.get(0))\r\n                            resultValidate.addValueError(\u0027tap.SchetFaktura.tr.Schet30304\u0027,  \u0027Не заполнено обязательное поле \"Аналитика 1\" счета 303.04 в табличной части.\u0027);\r\n                        else{\r\n                            if (schet30304.get(0).getCode() !\u003d\u003d \u0027731\u0027)\r\n                                resultValidate.addValueError(\u0027tap.SchetFaktura.tr.Schet30304\u0027, \u0027Аналитика 1: КЭК счета \"Счет 303.04\" в табличной части должна принимать значение \"731 - Увеличение прочей кредиторской задолженности по расчетам с участниками бюджетного процесса\"\u0027);\r\n                        }*/\r\n                        if (!schet30304.get(0))\r\n                            resultValidate.addValueError(\u0027tap.SchetFaktura.tr.Schet30304\u0027, \u0027Не заполнено обязательное поле \"Аналитика 1\" счета 303.04 в табличной части.\u0027);\r\n                        else{\r\n                            if (schet30304.get(0).getCode() !\u003d\u003d \u0027005\u0027)\r\n                                resultValidate.addValueError(\u0027tap.SchetFaktura.tr.Schet30304\u0027, \u0027Аналитика 1: Виды налогов и платежей счета \"Счет 303.04\" в табличной части должна принимать значение \"005 - Налог на добавленную стоимость\"\u0027);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            resultValidate.addValueError(\u0027C выбранной причиной налогообложения проводки не создаются\u0027);\r\n        }\r\n    }\r\n    \r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() ) \r\n        return  resultValidate;\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.SchetFaktura.Standartnyii",
    "title": {
      "ru_RU": "Стандартный",
      "en_EN": "Standartnyii"
    },
    "description": {}
  }
}