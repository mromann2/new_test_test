{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n\r\n    if (!notValid(currentDocument)) {\r\n        for (let tableRec of currentDocument.getRows()){\r\n            \r\n            //создание и заполнение проводок\r\n            \r\n            let KorSchet \u003d currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.KorSchet\u0027);\r\n            let kontragent \u003d currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.Kontragent\u0027)\r\n            let KorSchetNum \u003d KorSchet.getCode().substr(18,5);\r\n            \r\n            \r\n            //1. Основная проводка\r\n            let posting1 \u003d EntityFactory.createPosting();\r\n            KorSchet.put(0, kontragent);\r\n            posting1.setDebit(KorSchet);\r\n            posting1.setCredit(currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.SchetKt\u0027));\r\n            posting1.setValue(tableRec.get(\u0027tap.RashodnyeKassovyeOrdera.tr.Summa\u0027));\r\n            posting1.setComment(currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.Osnovanie\u0027)?.getTitle())\r\n            currentDocument.addPosting(posting1);\r\n          \r\n            //2. Забалансовая проводка\r\n            let posting2 \u003d EntityFactory.createPosting();\r\n            let shetCt2 \u003d EntityFactory.getPlan().getAccounts().findByCode(\u00270000000000000000000НД00000\u0027).get(0);\r\n            posting2.setCredit(shetCt2);\r\n            posting2.setValue(tableRec.get(\u0027tap.RashodnyeKassovyeOrdera.tr.Summa\u0027));\r\n            posting2.setComment(currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.Osnovanie\u0027)?.getTitle());\r\n            currentDocument.addPosting(posting2);\r\n\r\n            //3. Проводка по сч. 18\r\n            let posting3 \u003d EntityFactory.createPosting();\r\n            let shetCt3 \u003d EntityFactory.getPlan().getAccounts().findByCode(\u002700000000000000000001834000\u0027).get(0);\r\n            posting3.setCredit(shetCt3);\r\n            posting3.setValue(tableRec.get(\u0027tap.RashodnyeKassovyeOrdera.tr.Summa\u0027));\r\n            posting3.setComment(currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.Osnovanie\u0027)?.getTitle());\r\n            currentDocument.addPosting(posting3);\r\n        };\r\n                \r\n        //устанавливаем текущую дату проводки\r\n        currentDocument.setExecuted();\r\n\r\n        //сохранение документа с проводками\r\n        currentDocument.save();\r\n\r\n        return; \r\n\r\n    } else return notValid(currentDocument);\r\n        \r\n}\r\n\r\n//Снятие документа с проведения\r\nfunction deactivate(currentDocument) {\r\n    currentDocument.removeAllPostings();\r\n    currentDocument.setExecutedDate(null);\r\n    currentDocument.save();\r\n    return;\r\n}\r\n\r\n//Проверка документа на полное заполнение\r\nfunction notValid(currentDocument) { \r\n    let resultValidate \u003d currentDocument.validate();\r\n    \r\n     //Документ должен быть оплачен\r\n    if (!currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.Oplacheno\u0027))\r\n        resultValidate.addValueError(\u0027tap.RashodnyeKassovyeOrdera.hr.Oplacheno\u0027, \u0027Документ должен быть оплачен\u0027);\r\n    \r\n    //Контрагент должен быть заполнен\r\n    if (!currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.Kontragent\u0027))\r\n        resultValidate.addValueError(\u0027tap.RashodnyeKassovyeOrdera.hr.Kontragent\u0027, \u0027Не заполнено обязательное поле\u0027);\r\n    \r\n    // Счет кредита должен быть 20134\r\n    if ( currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.SchetKt\u0027) \u0026\u0026\r\n        currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.SchetKt\u0027).getCode().substr(18,5) !\u003d\u003d \u002720134\u0027) \r\n            resultValidate.addValueError(\u0027tap.RashodnyeKassovyeOrdera.hr.SchetKt\u0027, \u0027Счет должен принимать значение 201.34\u0027);\r\n    \r\n    //Допустимое значение счета данного алгоритма\r\n    if (currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.KorSchet\u0027)){\r\n        let korSchet \u003d currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.KorSchet\u0027).getCode().substr(18,5);\r\n        if ( korSchet !\u003d\u003d \u002720981\u0027){\r\n                resultValidate.addValueError(\u0027tap.RashodnyeKassovyeOrdera.hr.KorSchet\u0027, \u0027Счет должен принимать значение 209.81\u0027);\r\n        }\r\n    } \r\n    \r\n    //Заполнена табличная часть\r\n    if (!currentDocument.getRows().size())\r\n        resultValidate.addValueError(\u0027Не заполнена табличная часть документа.\u0027);\r\n    else {\r\n\r\n        let tableSum \u003d 0;\r\n        let docSum \u003d +currentDocument.get(\u0027tap.RashodnyeKassovyeOrdera.hr.Summa\u0027)\r\n\r\n        for (let tableRec of currentDocument.getRows()){\r\n            tableSum +\u003d +tableRec.get(\u0027tap.RashodnyeKassovyeOrdera.tr.Summa\u0027);     \r\n        }\r\n\r\n        // сумма в шапке ровняется сумме всех строк\r\n        if (tableSum.toFixed(2) !\u003d\u003d docSum.toFixed(2))\r\n            resultValidate.addValueError(`Сумма(всего) (${docSum.toFixed(2)}) не совпадает с суммой строк в табличной части (${tableSum.toFixed(2)})`);\r\n\r\n    } \r\n    \r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() ) \r\n        return  resultValidate;\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.RashodnyeKassovyeOrdera.SpisanieSummVyyavlennyhNedostachPoterDs",
    "title": {
      "ru_RU": "Списание сумм выявленных недостач, потерь д/с",
      "en_EN": "Spisanie summ vyyavlennyh nedostach poter ds"
    },
    "description": {}
  }
}