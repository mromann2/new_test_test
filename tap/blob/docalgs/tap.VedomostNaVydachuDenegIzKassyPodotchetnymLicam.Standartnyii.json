{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n    if (!notValid(currentDocument)) {\r\n        let osnovanie \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Osnovanie\u0027)?.getTitle();\r\n        \r\n        for (let tableRec of currentDocument.getRows()){\r\n            let summa \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Summa\u0027);\r\n            let worker \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Sotrudnik\u0027);\r\n             \r\n        //Основная проводка\r\n            let posting \u003d EntityFactory.createPosting();\r\n            posting.setComment(osnovanie);\r\n            posting.setValue(summa);\r\n\r\n            //счет Дб 208 (Кпс, кфо из табличной части, кэк из счета)\r\n            let debit \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.SchetDebeta\u0027);\r\n            // по сотруднику ищем контрагента и записываем в аналитику\r\n            debit.put(0, EntityFactory.getCatalogs().get(\"tap.Kontragenty\").findByRequisite(\u0027tap.Kontragenty.YAvlyaetsyaSotrudnikomOrganizacii\u0027, worker).get(0)); //Аналитика 1: Контрагент - сотрудник\r\n            posting.setDebit(debit);\r\n            \r\n            //счет Кр 201.34 (Кпс из шапки, кэк из счета, кфо из табличной части)\r\n            let credit \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027);\r\n            posting.setCredit(credit);\r\n            currentDocument.addPosting(posting);\r\n            \r\n        //Забалансовая проводка    \r\n            let posting2 \u003d EntityFactory.createPosting();\r\n            posting2.setComment(osnovanie);\r\n            posting2.setValue(summa);\r\n            \r\n            //счет Кр НД (Кпс, кфо и кэк из табличной части)\r\n            let credit2 \u003d EntityFactory.getPlan().getAccounts().findByCode(\u00270000000000000000000НД00000\u0027).get(0);\r\n            posting2.setCredit(credit2);\r\n            currentDocument.addPosting(posting2);\r\n            \r\n        //Проводка по счету 18   \r\n            let posting3 \u003d EntityFactory.createPosting();\r\n            posting3.setComment(osnovanie);\r\n            posting3.setValue(summa);\r\n            \r\n            //счет Кр 18.34 (Кпс, кфо и кэк из табличной части)\r\n            let credit3 \u003d EntityFactory.getPlan().getAccounts().findByCode(\u002700000000000000000001834000\u0027).get(0);\r\n            posting3.setCredit(credit3);\r\n            currentDocument.addPosting(posting3);\r\n            \r\n        }\r\n        \r\n        currentDocument.setExecuted();\r\n        currentDocument.save();\r\n    \r\n        return;  \r\n    } else \r\n        return notValid(currentDocument);\r\n}\r\n\r\n\r\n//Снятие документа с проведения\r\nfunction deactivate(currentDocument) {\r\n    currentDocument.removeAllPostings();\r\n    currentDocument.setExecutedDate(null);\r\n    currentDocument.save();\r\n    return;\r\n}\r\n\r\n//Проверка документа на полное заполнение\r\nfunction notValid(currentDocument) { \r\n    let resultValidate \u003d currentDocument.validate();\r\n    \r\n    //Документ исполнен\r\n    if (!currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Ispolnen\u0027))\r\n        resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Ispolnen\u0027, \u0027В документе должна быть проставлена отметка об исполнении\u0027);\r\n    //Документ не аннулрован\r\n    if (currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Anulirovan\u0027))\r\n        resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Anulirovan\u0027, \u0027Аннулированный документ не подлежит проведению\u0027);\r\n    //счет Касса \u003d 201.34 по ЕПСБУ\r\n    if (currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027) \u0026\u0026\r\n        currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027).getCode().substr(18,5) !\u003d\u003d \u002720134\u0027)\r\n            resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetKassa\u0027, \u0027Счет должен принимать значение 201.34\u0027);\r\n    //счет Расчеты с подотчет лицами из 208 группы\r\n    if (currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027) \u0026\u0026\r\n        currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027).getCode().substr(18,3) !\u003d\u003d \u0027208\u0027)\r\n            resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027, \u0027Счет должен относиться к 208 группе счетов\u0027);\r\n    \r\n    //Сумма \u003d Распределено \u003d Выплачено\r\n    let sum1 \u003d +currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Summa\u0027);\r\n    let sum2 \u003d +currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Raspredeleno\u0027);\r\n    let sum3 \u003d +currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Vyplacheno\u0027);\r\n    if (sum1 \u0026\u0026 sum2 \u0026\u0026 sum3 \u0026\u0026 (sum1 !\u003d\u003d sum2 || sum1 !\u003d\u003d sum3))\r\n        resultValidate.addValueError(\u0027Значения полей \"Сумма\", \"Распределено\" и \"Выплачено\" должны совпадать\u0027);\r\n    \r\n    if (!currentDocument.getRows().size())\r\n        resultValidate.addValueError(\u0027Не заполнена табличная часть документа\u0027);\r\n    else {\r\n        let sum \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Vyplacheno\u0027);\r\n        let result \u003d 0.00;\r\n        \r\n        for (let tableRec of currentDocument.getRows()){\r\n            // проверка наличия контрагента по данному сотруднику\r\n            let worker \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Sotrudnik\u0027)\r\n            if (worker \u0026\u0026 EntityFactory.getCatalogs().get(\"tap.Kontragenty\").findByRequisite(\u0027tap.Kontragenty.YAvlyaetsyaSotrudnikomOrganizacii\u0027, worker).size() \u003d\u003d 0)\r\n                resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Sotrudnik\u0027, \u0027По сотруднику \u0027 + worker.getTitle() + \u0027 не найдено записей в справочнике \"Контрагенты\"\u0027);\r\n            \r\n            // Проверка выплачено\r\n            if (tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Vyplacheno\u0027) !\u003d null) {\r\n                if (!tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Vyplacheno\u0027))\r\n                    resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Vyplacheno\u0027, \u0027По всем сотрудникам должна стоять отметка о выплате\u0027);\r\n            }\r\n            result +\u003d +tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.Summa\u0027);\r\n        }\r\n        \r\n        //сумма выплачено \u003d сумме из строк\r\n        if (+sum !\u003d\u003d +result.toFixed(2))\r\n            resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.Vyplacheno\u0027, \u0027Значение должно быть равно сумме значений \"Сумма\" по каждому сотруднику\u0027);\r\n\r\n        //счет Дебета (табл) должен принадлежать к группе с Расчеты с подотчет лицами или совпадать\r\n        if (currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027)) {\r\n            let schet208 \u003d currentDocument.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.hr.SchetRaschetySPodotchetnymiLicami\u0027).getCode().substr(18,5).replace(/0*$/, \u0027\u0027);\r\n            for (let tableRec of currentDocument.getRows()){\r\n                if (tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.SchetDebeta\u0027)) {\r\n                    let debit \u003d tableRec.get(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.SchetDebeta\u0027).getCode().substr(18,5);\r\n                    if (!debit.startsWith(schet208))\r\n                        resultValidate.addValueError(\u0027tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.tr.SchetDebeta\u0027, \u0027Счет должен относиться к Счету \"Расчеты с подотчетными лицами\" или совпадать\u0027);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() ) \r\n        return  resultValidate;\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.VedomostNaVydachuDenegIzKassyPodotchetnymLicam.Standartnyii",
    "title": {
      "ru_RU": "Стандартный",
      "en_EN": "Standartnyii"
    },
    "description": {}
  }
}