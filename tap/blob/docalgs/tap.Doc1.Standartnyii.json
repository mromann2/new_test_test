{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {  \r\n    \r\n//    let req \u003d currentDocument.get(\u0027tap.Doc1.hr.1\u0027).getProperty(\u0027tap.TestovyiiSpravochnik.Schett\u0027, \u0027tap.TestovyiiSpravochnik.Schett_analytics_0\u0027)\r\n//    \r\n//    \r\n//    let accFromCatalog \u003d currentDocument.get(\u0027tap.Doc1.hr.1\u0027).get(\u0027tap.TestovyiiSpravochnik.Schet\u0027)\r\n//    \r\n//    \r\n//    \r\n//    //return acc.get(\u0027tap.TestovyiiSpravochnik.Schett\u0027)\r\n//    let accDoc \u003d currentDocument.get(\u0027tap.Doc1.hr.Schett\u0027)\r\n//    let aID \u003d accDoc.get(0).getId()\r\n    //console.log( [accCatalog,\u0027xxx\u0027,  accDoc] )\r\n    //console.log(a1)\r\n    //let acc \u003d EntityFactory.getPlan().getAccounts().findByCode(\"10135\").get(0);\r\n    //\r\n   //let reqCatalog \u003d EntityFactory.getCatalogs().get(\"tap.KFO\").findByCode(\u00277\u0027).get(0)\r\n    let catalog \u003d currentDocument.get(\u0027tap.Doc1.hr.1\u0027)//.get(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027)\r\n    //let acc \u003d catalog.get(\u0027tap.TestovyiiSpravochnik.Schett\u0027)\r\n    //let rekvizit1 \u003d catalog.get(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027)\r\n           //      return catalog//acc.isPeriodical()\r\n   // catalog.set(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027, \u0027100\u0027)\r\n    //catalog.set(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027, new  Date(2022, 4, 19,21,39,23,232), \u002722222\u0027)\r\n   //catalog.set(\u0027tap.TestovyiiSpravochnik.2\u0027, \u0027reqCatalog\u0027)\r\n   //catalog.set(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027, new Date(2022, 7, 01,17,44,34,945),\u0027945\u0027)\r\n    //console.log(catalog.get(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027, new Date(2022, 5, 01,17,44,34,943)))\r\n    console.log(catalog.get(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027))//, new Date(\"2022-05-01\")))\r\n    catalog.save()\r\n\r\n    \r\n    \r\n    \r\n//    \r\n//    let catalog \u003d EntityFactory.createCatalogRecord(\u0027tap.TestovyiiSpravochnik\u0027);\r\n//    catalog.setCode(\u00270001\u0027);\r\n//    catalog.setTitle(\u0027Иванов Иван Иванович\u0027);\r\n//    catalog.set(\u0027tap.TestovyiiSpravochnik.Rekvizit1\u0027, \"111\")\r\n//    catalog.save()\r\n//    \r\n//    if (!notValid(currentDocument)) {\r\n//        \r\n//        return EntityFactory.getDocuments().get(\"tap.BuhgalterskayaSpravka\").findByNumber(\"00000\").get(0).get(\u0027tap.BuhgalterskayaSpravka.hr.Opisanie\u0027);\r\n//        //EntityFactory.getDocuments().get(\"tap.BuhgalterskayaSpravka\").findByNumber(\"00000\").get(0).unPostingAndSave();\r\n//        \r\n//        //устанавливаем текущую дату проводки\r\n//        //currentDocument.setExecuted();\r\n//\r\n//        //сохранение документа с проводками\r\n//        //currentDocument.save();\r\n//       \r\n//        return;  \r\n//    } else \r\n//        return notValid(currentDocument);\r\n}\r\n\r\nfunction deactivate(currentDocument) {\r\n    currentDocument.unPostingAndSave();\r\n}\r\n\r\n//Проверка документа на полное заполнение\r\nfunction notValid(currentDocument) { \r\n    let resultValidate \u003d currentDocument.validate();\r\n\r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() ) \r\n        return  resultValidate;\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.Doc1.Standartnyii",
    "title": {
      "ru_RU": "Стандартный",
      "en_EN": "Standartnyii"
    },
    "description": {}
  }
}