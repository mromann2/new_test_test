{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n   // let enum \u003d EntityFactory.getEnumeration(\"tap.VidyUchetaNFA\")//.findByCode(\u002700010\u0027).get(0).getId()\r\n//   let x \u003d []\r\n//   let enumer \u003d EntityFactory.getEnumeration(\u0027tap.VidyNFA\u0027).forEach(e \u003d\u003e x.push(e))\r\n//   return x.includes(\u0027Основные средства\u0027)\r\n\r\nfor (let i \u003d 0; i \u003c 10; i++){\r\n    let organization \u003d currentDocument.getOrganization();\r\n    let newDocument \u003d EntityFactory.createDocument(\u0027tap.BuhgalterskayaSpravka\u0027)\r\n    newDocument.setNumber(i + \u0027\u0027)\r\n    \r\n    newDocument.set( \"tap.BuhgalterskayaSpravka.hr.Opisanie\", \u0027док № \u0027 + i);\r\n    newDocument.set( \"tap.BuhgalterskayaSpravka.hr.Perechislenie\", \u0027Основные средства\u0027 );\r\n    newDocument.set( \"tap.BuhgalterskayaSpravka.hr.Spravochnik\", EntityFactory.getCatalogs().get(\"tap.Kontragenty\").findByCode(\u002700002\u0027).get(0) );\r\n\r\n    let row \u003d  newDocument.addTableRow();\r\n\r\n    row.put(\"tap.BuhgalterskayaSpravka.tr.NaimenovanieIOpisanieOperacii\", \u0027Описание № \u0027 + i);\r\n    row.put(\"tap.BuhgalterskayaSpravka.tr.NomerSchetaPoDebitu\", EntityFactory.getPlan().getAccounts().findByCode(\"30304\").get(0) );\r\n    row.put(\"tap.BuhgalterskayaSpravka.tr.NomerSchetaPoKreditu\", EntityFactory.getPlan().getAccounts().findByCode(\"10111\").get(0) );\r\n    row.put(\"tap.BuhgalterskayaSpravka.tr.Summa\", \u002710\u0027);\r\n    row.put(\"tap.BuhgalterskayaSpravka.tr.Kolichestvo\", \u00272\u0027);\r\n\r\n        for (let tableRec of newDocument.getRows()){\r\n     \r\n             \r\n            //создание и заполнение проводки\r\n            let posting \u003d EntityFactory.createPosting();\r\n            posting.setComment(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.NaimenovanieIOpisanieOperacii\u0027));\r\n            posting.setValue(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.Summa\u0027));\r\n            posting.setDebit(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.NomerSchetaPoDebitu\u0027));\r\n            posting.setCredit(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.NomerSchetaPoKreditu\u0027));\r\n            newDocument.addPosting(posting);\r\n            \r\n            \r\n            let myReg2 \u003d Register.get(\"tap.Testovyii2\")//.get(0);\r\n            let doc \u003d newDocument;\r\n            let dem \u003d newDocument.get(\u0027tap.BuhgalterskayaSpravka.hr.Spravochnik\u0027);\r\n            let dem2 \u003d currentDocument.get(\u0027tap.BuhgalterskayaSpravka.hr.Spravochnik2\u0027);\r\n            let res \u003d tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.Summa\u0027);\r\n            let res2 \u003d tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.Kolichestvo\u0027); \r\n            let req \u003d newDocument.get(\u0027tap.BuhgalterskayaSpravka.hr.Perechislenie\u0027);\r\n\r\n\r\n            let record \u003d myReg2.create(); \r\n\r\n            record.setDate(new Date());\r\n            record.setDocument(doc);\r\n            record.setDimension(\u0027tap.Testovyii2.dm.1\u0027, dem);\r\n            record.setDimension(\u0027tap.Testovyii2.dm.11\u0027, dem2);\r\n            record.set(\u0027tap.Testovyii2.rs.2\u0027, res);\r\n            record.set(\u0027tap.Testovyii2.rs.21\u0027, res2);\r\n            record.setRequisite(\u0027tap.Testovyii2.rg.3\u0027, req); \r\n            record.create();\r\n          \r\n            \r\n        };\r\n        //устанавливаем текущую дату проводки\r\n        newDocument.setExecuted();\r\n\r\n        //сохранение документа с проводками\r\n        newDocument.save();\r\n\r\n}\r\n\r\n\r\n\r\n}  \r\n//    let dem \u003d EntityFactory.getCatalogs().get(\"tap.Kontragenty\").findByCode(\u002700010\u0027).get(0) \r\n//    return dem.getId()\r\n//    \r\n//    \r\n//    let myReg2 \u003d Register.get(\"tap.Testovyii2\").get(0);\r\n//    console.log(myReg2)\r\n\r\n//let reg \u003d Register.get(\u0027tap.CenyNomenklatury\u0027).get(0)\r\n//let reg \u003d Register.get(\u0027tap.Testovyii\u0027).get(0)\r\n//return reg//.getType()\r\n//\r\n//let myReg2 \u003d Register.get(\"tap.Testovyii2\").get(0);\r\n//return myReg2\r\n//let d1 \u003d EntityFactory.getDocuments().get(\"tap.BuhgalterskayaSpravka\").get(0); \r\n//let c3 \u003d EntityFactory.getCatalogs().get(\"tap.OKVEDred1\").get(1);\r\n//\r\n//let record \u003d myReg2.create(); \r\n//\r\n//record.setDate(d1.getDate());\r\n//record.setDocument(d1);\r\n//record.setDimension(\u0027tap.Testovyii2.dm.1\u0027, \u0027111\u0027);\r\n//record.set(\u0027tap.Testovyii2.rs.2\u0027, 222);\r\n//record.setRequisite(\u0027tap.Testovyii2.rg.3\u0027, \u0027333\u0027); \r\n//record.create();\r\n//return record\r\n//\r\n//let myreg\u003dmyReg2.get(5)\r\n//let myReg3 \u003d Register.get(\"tap.Testovyii2\");\r\n//\r\n//let d1 \u003d EntityFactory.getDocuments().get(\"tap.BuhgalterskayaSpravka\").get(0);\r\n//let c3 \u003d EntityFactory.getCatalogs().get(\"tap.OKVEDred1\").get(0);\r\n//let req3 \u003d EntityFactory.getCatalogs().get(\"tap.OKVEDred1\").get(2);\r\n//\r\n\r\n//let myReg3 \u003d Register.get(\"tap.Testovyii2\");\r\n//let d1 \u003d EntityFactory.getDocuments().get(\"tap.BuhgalterskayaSpravka\").get(0);\r\n//myReg3.create({\r\n//  Date: d1.getDate(),\r\n//  Document: d1,\r\n//  Dimensions: {\"tap.Testovyii2.dm.1\": \u0027111\u0027},\r\n//  Resources: {\"tap.Testovyii2.rs.2\u0027\": 666},\r\n//  Requisites: {\"tap.Testovyii2.rg.3\": \u0027666\u0027}\r\n//  });\r\n\r\n//let condition \u003d filter.dimension(\u0027tap.Testovyii2.dm.1\u0027, c3)//.and().resource(\u0027tap.Testovyii2.rs.2\u0027,111.09)\r\n//let condition \u003d filter.create(\r\n//        {Date: d1.getDate(),\r\n//            Document: d1,\r\n//            Dimensions: {\r\n//                \"tap.Testovyii2.dm.1\": c3,\r\n//            },\r\n////            Requisites: {\r\n////                \"tap.Testovyii2.rg.3\": c3\r\n////            }\r\n//        });\r\n//return condition\r\n//return myreg.getDimension(\u0027tap.Testovyii2.dm.1\u0027) \r\n\r\n//let ccc2 \u003d filter.dimension(\u0027tap.Testovyii2.dm.1\u0027, c3).and().resource(\u0027tap.Testovyii2.rs.2\u0027, 1000);\r\n//ret \u003d myReg2.summ(ccc2, \u0027tap.Testovyii2.rs.2\u0027);\r\n//return ret\r\n\r\n//return  currentDocument.getMnemo()\r\n// return EntityFactory.getOrganization()\r\n//let myReg2 \u003d Register.get(\"tap.CenyNomenklatury\");\r\n//let record \u003d myReg2.create();\r\n//record.setDate(new Date());\r\n//record.setDocument(currentDocument);\r\n//record.setDimension(\u0027d1\u0027, c3);\r\n//record.set(\u0027res1\u0027, 10000);\r\n//record.setRequisite(\u0027r1\u0027, d1);\r\n//record.create();\r\n// \r\n// let myReg2 \u003d Register.get(\"tap.Testovyii2\")//.get(0)\r\n// let d1 \u003d EntityFactory.getDocuments().get(\"tap.BuhgalterskayaSpravka\").get(0); \r\n// \r\n//    \r\n//myReg2.delete({\r\n//Date: d1.getDate(),\r\n//Document: d1,\r\n//Dimensions: {\"tap.Testovyii2.dm.1\": \u0027111\u0027},\r\n//Resources: {\"tap.Testovyii2.rs.2\u0027\": 999},\r\n//Requisites: {\"tap.Testovyii2.rg.3\": \u0027333\u0027}\r\n//  });\r\n\r\n    \r\n    \r\n//     if (!notValid(currentDocument)) {\r\n//         for (let tableRec of currentDocument.getRows()){\r\n//             \r\n//             return  tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.NomerSchetaPoDebitu\u0027).getBudgetClassifications();\r\n//            //создание и заполнение проводки\r\n//            let posting \u003d EntityFactory.createPosting();\r\n//            posting.setComment(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.NaimenovanieIOpisanieOperacii\u0027));\r\n//            posting.setValue(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.Summa\u0027));\r\n//            posting.setDebit(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.NomerSchetaPoDebitu\u0027));\r\n//            posting.setCredit(tableRec.get(\u0027tap.BuhgalterskayaSpravka.tr.NomerSchetaPoKreditu\u0027));\r\n//            currentDocument.addPosting(posting);\r\n//        };\r\n//        //устанавливаем текущую дату проводки\r\n//        currentDocument.setExecuted();\r\n////    let catalog \u003d EntityFactory.createCatalogRecord(\u0027Roditel.TestovyiiSpravochnik\u0027);\r\n////    catalog.setCode(\u00272bs\u0027);\r\n////    catalog.setTitle(\u0027С\u0027);\r\n////    catalog.save();\r\n//    //nR();\r\n//        //сохранение документа с проводками\r\n//        currentDocument.save();\r\n//        return;  \r\n//    } else \r\n//        return notValid(currentDocument);\r\n//}\r\n//\r\n////Снятие документа с проведения\r\n//function deactivate(currentDocument) {\r\n//    currentDocument.unPostingAndSave();\r\n//}\r\n//\r\n////Проверка документа на полное заполнение\r\n//function notValid(currentDocument) { \r\n//    let resultValidate \u003d currentDocument.validate();\r\n// \r\n//    if (!currentDocument.getRows().size()){\r\n//        resultValidate.addValueError(\u0027Не заполнена табличная часть документа.\u0027);\r\n//    }\r\n//\r\n//    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() ) \r\n//        return  resultValidate;\r\n//}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.BuhgalterskayaSpravka.Test",
    "title": {
      "ru_RU": "тест_создание с проведением и регистром",
      "en_EN": "test"
    },
    "description": {}
  }
}