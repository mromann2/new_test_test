{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n\r\n    if (!notValid(currentDocument)) {\r\n        \r\n        for (let tableRec of currentDocument.getRows()){\r\n            \r\n            //создание и заполнение проводки по счету расчетов\r\n            let posting \u003d EntityFactory.createPosting();\r\n            let summa \u003d tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Vsego\u0027);\r\n            \r\n            if(currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.PrinyatNDSKVychetu\u0027)){\r\n            \r\n                let summaNDS \u003d tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.SummaNDS\u0027);\r\n                if(summaNDS !\u003d\u0027\u0027 \u0026\u0026 parseFloat(summaNDS) !\u003d0){\r\n                    //создание и заполнение проводки по счету НДС\r\n                    let posting \u003d EntityFactory.createPosting();\r\n                    posting.setValue(summaNDS);\r\n                    posting.setComment(\u0027Выделен НДС: \u0027 + tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Nomenklatura\u0027));\r\n                    posting.setProperty(KFO, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KFO\u0027).getCode());\r\n                    posting.setCredit(currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.SchetRaschetov\u0027));\r\n                    posting.setCreditProperty(KPS, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KPSRaschetov\u0027).getCode());\r\n                    posting.setCreditProperty(KOSGU, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KOSGURaschetov\u0027).getCode());\r\n                                        \r\n                    if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.NDSRaspredelyaetsya\u0027)){\r\n                        posting.setDebit(currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.SchetNDS\u0027));\r\n                        posting.setDebitProperty(KPS, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KPSNDS\u0027).getCode());\r\n                        posting.setDebitProperty(KOSGU, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KOSGUNDS\u0027).getCode());\r\n                    } else {\r\n                        posting.setDebit(currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.SchetNDSKRaspredeleniiu\u0027));\r\n                        posting.setDebitProperty(KPS, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KPSNDSKRaspredeleniiu\u0027).getCode());\r\n                        posting.setDebitProperty(KOSGU, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KOSGUNDSKRaspredeleniiu\u0027).getCode());\r\n                    }\r\n                    \r\n                    currentDocument.addPosting(posting);\r\n                }\r\n                \r\n                summa \u003d tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Summa\u0027);\r\n            }\r\n            \r\n            posting.setValue(summa);\r\n            posting.setComment(tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Nomenklatura\u0027));\r\n            posting.setProperty(KFO, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KFO\u0027).getCode());\r\n            posting.setDebit(currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.SchetDb\u0027));\r\n            posting.setDebitProperty(KPS, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KPSDb\u0027).getCode());\r\n            posting.setDebitProperty(KOSGU, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KOSGUDb\u0027).getCode());\r\n            posting.setCredit(currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.SchetRaschetov\u0027));\r\n            posting.setCreditProperty(KPS, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KPSRaschetov\u0027).getCode());\r\n            posting.setCreditProperty(KOSGU, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KOSGURaschetov\u0027).getCode());\r\n            \r\n            currentDocument.addPosting(posting);\r\n            \r\n            //создание и заполнение проводки по счету обязательств\r\n            if(currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.PrinyatDenezhnoeObyazatelstvo\u0027)){\r\n                let posting \u003d EntityFactory.createPosting();\r\n                posting.setComment(\u0027Принято денежное обязательство\u0027);\r\n                posting.setValue(tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Vsego\u0027));\r\n                posting.setProperty(KFO, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KFO\u0027).getCode());\r\n                \r\n                let AccDebitPrDenObyaz \u003d EntityFactory.getPlan().getAccounts().findByCode(\u002750211\u0027).get(0);\r\n                    AccDebitPrDenObyaz.put(0, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.RazdelLicevyhSchetov\u0027) ); //Аналитика 1: Раздел лицевых счетов\r\n                    AccDebitPrDenObyaz.put(1, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.Dogovor\u0027) );//Аналитика 2: Договор\r\n                posting.setDebit(AccDebitPrDenObyaz);\r\n                posting.setDebitProperty(KPS, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027).getCode());\r\n                posting.setDebitProperty(KOSGU, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027).getCode());\r\n\r\n                let AccCreditPrDenObyaz \u003d EntityFactory.getPlan().getAccounts().findByCode(\u002750212\u0027).get(0);\r\n                    AccCreditPrDenObyaz.put(0, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.RazdelLicevyhSchetov\u0027) ); //Аналитика 1: Раздел лицевых счетов\r\n                    AccCreditPrDenObyaz.put(1, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.Dogovor\u0027) );//Аналитика 2: Договор\r\n                posting.setCredit(AccCreditPrDenObyaz);\r\n                posting.setCreditProperty(KPS, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027).getCode());\r\n                posting.setCreditProperty(KOSGU, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027).getCode());\r\n                \r\n                currentDocument.addPosting(posting);\r\n            }\r\n            \r\n            //создание и заполнение проводки НУ: Услуги сторонних организаций\r\n            if(tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KFO\u0027).getCode() \u003d\u003d \u00272\u0027){\r\n                let posting \u003d EntityFactory.createPosting();\r\n                posting.setComment(tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Nomenklatura\u0027));\r\n                posting.setValue(tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Vsego\u0027));\r\n                posting.setProperty(KFO, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KFO\u0027).getCode());\r\n\r\n                let AccDebitNU \u003d EntityFactory.getPlan().getAccounts().findByCode(\u0027Н2602\u0027).get(0);\r\n                    AccDebitNU.put(0, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.VidyZatrat\u0027) ); //Аналитика 1: Виды затрат\r\n                posting.setDebit(AccDebitNU);\r\n                posting.setDebitProperty(KPS, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027).getCode());\r\n                posting.setDebitProperty(KOSGU, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027).getCode());\r\n\r\n                let AccCreditNU \u003d EntityFactory.getPlan().getAccounts().findByCode(\u0027НПВ\u0027).get(0);\r\n                    AccCreditNU.put(0, EntityFactory.getCatalogs().get(\"tap.UsloviyaPostupleniyaIVybytiya\").findByCode(\u0027001\u0027).get(0) ); //Аналитика 1: Условия поступления и выбытия\r\n                    AccCreditNU.put(1, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.Kontragent\u0027) ); //Аналитика 2: Котрагенты\r\n                    AccCreditNU.put(2, currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.Dogovor\u0027) ); //Аналитика 3: Договоры\r\n                posting.setCredit(AccCreditNU);\r\n                posting.setCreditProperty(KPS, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027).getCode());\r\n                posting.setCreditProperty(KOSGU, tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027).getCode());\r\n            \r\n                currentDocument.addPosting(posting);\r\n            }\r\n        };\r\n                \r\n        //устанавливаем текущую дату проводки\r\n        currentDocument.setExecuted();\r\n\r\n        //сохранение документа с проводками\r\n        currentDocument.save();\r\n\r\n        return;  \r\n        \r\n    } else \r\n        return notValid(currentDocument);\r\n}\r\n\r\n//Снятие документа с проведения\r\nfunction deactivate(currentDocument) {\r\n    \r\n    //удаляем старые проводки\r\n    currentDocument.removeAllPostings();\r\n    //обнуляем дату проводки\r\n    currentDocument.setExecutedDate(null);\r\n    currentDocument.save();\r\n    return;\r\n}\r\n\r\n//Проверка документа на полное заполнение\r\nfunction notValid(currentDocument) {\r\n    let resultValidate \u003d currentDocument.validate();\r\n \r\n    if (!currentDocument.getRows().size())\r\n        resultValidate.addValueError(\u0027Не заполнена табличная часть документа.\u0027);\r\n    \r\n    //Проверки\r\n    if (!resultValidate.hasErrors())  {\r\n       \r\n        for (let tableRec of currentDocument.getRows()){\r\n\r\n            if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Summa\u0027))\r\n                resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.Summa\u0027, \u0027\\nНе заполнено обязательное поле \"Сумма\" в табличной части.\u0027);\r\n            \r\n            if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Vsego\u0027))\r\n                resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.Vsego\u0027, \u0027\\nНе заполнено обязательное поле \"Всего\" в табличной части.\u0027);\r\n            \r\n            if (currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.PrinyatNDSKVychetu\u0027)){\r\n                if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.SummaNDS\u0027))\r\n                    resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.SummaNDS\u0027, \u0027\\nНе заполнено обязательное поле \"Сумма НДС\" в табличной части.\u0027);\r\n                \r\n                if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.NDSRaspredelyaetsya\u0027)){\r\n                    if (!currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.SchetNDS\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.hr.SchetNDS\u0027, \u0027\\nНе заполнено обязательное поле \"Счет НДС\".\u0027);\r\n                    if (!currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KPSNDS\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.hr.KPSNDS\u0027, \u0027\\nНе заполнено обязательное поле \"КПС НДС\".\u0027);\r\n                    if (!currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KOSGUNDS\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.hr.KOSGUNDS\u0027, \u0027\\nНе заполнено обязательное поле \"КОСГУ НДС\".\u0027);\r\n                } else {\r\n                    if (!currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.SchetNDSKRaspredeleniiu\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.hr.SchetNDSKRaspredeleniiu\u0027, \u0027\\nНе заполнено обязательное поле \"Счет НДС к распределению\".\u0027);\r\n                    if (!currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KPSNDSKRaspredeleniiu\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.hr.KPSNDSKRaspredeleniiu\u0027, \u0027\\nНе заполнено обязательное поле \"КПС НДС к распределению\".\u0027);\r\n                    if (!currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.KOSGUNDSKRaspredeleniiu\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.hr.KOSGUNDSKRaspredeleniiu\u0027, \u0027\\nНе заполнено обязательное поле \"КОСГУ НДС к распределению\".\u0027);                      \r\n                }\r\n            }\r\n            \r\n            if (currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.PrinyatDenezhnoeObyazatelstvo\u0027)){\r\n                if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.Vsego\u0027))\r\n                    resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.Vsego\u0027, \u0027\\nНе заполнено обязательное поле \"Всего\" в табличной части.\u0027);\r\n                if (!currentDocument.get(\u0027tap.PostuplenieUslugRabot.hr.RazdelLicevyhSchetov\u0027))\r\n                    resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.hr.RazdelLicevyhSchetov\u0027, \u0027\\nНе заполнено обязательное поле \"Раздел лицевых счетов\".\u0027);\r\n                if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027))\r\n                    resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027, \u0027\\nНе заполнено обязательное поле \"КПС\" в табличной части.\u0027);\r\n                if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027))\r\n                    resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027, \u0027\\nНе заполнено обязательное поле \"КОСГУ\" в табличной части.\u0027);\r\n            }\r\n\r\n            if(tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KFO\u0027)){\r\n                if(tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KFO\u0027).getCode() \u003d\u003d \u00272\u0027){\r\n                    if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.VidyZatrat\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.VidyZatrat\u0027, \u0027\\nНе заполнено обязательное поле \"Виды затрат\" в табличной части.\u0027);\r\n                    if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.KPS\u0027, \u0027\\nНе заполнено обязательное поле \"КПС\" в табличной части.\u0027);\r\n                    if (!tableRec.get(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027))\r\n                        resultValidate.addValueError(\u0027tap.PostuplenieUslugRabot.tr.KOSGU\u0027, \u0027\\nНе заполнено обязательное поле \"КОСГУ\" в табличной части.\u0027);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    if (resultValidate.hasErrors() || resultValidate.hasValueErrors() ) \r\n        return  resultValidate;\r\n};"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "tap.PostuplenieUslugRabot.Standartnyii",
    "title": {
      "ru_RU": "Стандартный",
      "en_EN": "Standartnyii"
    },
    "description": {}
  }
}