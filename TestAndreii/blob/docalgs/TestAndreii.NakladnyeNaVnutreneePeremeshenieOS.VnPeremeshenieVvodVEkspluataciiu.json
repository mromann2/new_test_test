{
  "script": {
    "title": "script",
    "sources": "//Проведение документа\r\nfunction activate(currentDocument) {\r\n    const DOCMNEMO \u003d \u0027NakladnyeNaVnutreneePeremeshenieOS\u0027;\r\n    \r\n    \r\n    if (notValid(currentDocument)) {\r\n        return notValid(currentDocument);\r\n    };            \r\n    \r\n    let resultValidate \u003d currentDocument.validate();\r\n    \r\n    let summ \u003d 0;\r\n    let KreditZero \u003d null;\r\n    let KreditZeroKosgu;\r\n         \r\n    if (EntityFactory.getPlan().getAccounts().findByCode(\u002700000\u0027).size() \u003e 0) {\r\n        KreditZero \u003d EntityFactory.getPlan().getAccounts().findByCode(\u002700000\u0027).get(0);                         \r\n        KreditZeroKosgu \u003d getKOSGUCredit(KreditZero);\r\n    }    \r\n    \r\n    for (let tableRec of currentDocument.getRows()){\r\n         let summs \u003d tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.Stoimost\u0027); \r\n         let summAmo \u003d tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.AmortizaciyaDo1\u0027);\r\n         \r\n         let Debet;         \r\n         let Kredit;\r\n         let DebetKosgu;\r\n         let KreditKosgu;\r\n         let KartDt;\r\n         let SubKartDt;\r\n         let Ekr;\r\n         \r\n         \r\n         //---ПО 1 ПРОВОДКЕ\r\n         let postingProps \u003d {\r\n              tableRec,\r\n              currentDocument,\r\n              docMnemo: MODULEMNEMO + \u0027.\u0027 + DOCMNEMO,\r\n              summa: summs,\r\n         }\r\n                  \r\n         //добавление проводки 1         \r\n         currentDocument.addPosting(createPostingWithProps(postingProps));\r\n         \r\n         \r\n         //-------------------------------------------------------------------------\r\n         // по счету Дебет ищем счет затрат в Соответствии счетов (для 2-3 проводки)\r\n         let Dt \u003d tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.Debet\u0027);\r\n         \r\n         if (Dt !\u003d null) {   \r\n             Debet \u003d null;\r\n             //Если в справочнике Соответствие счетов найден нужный счет, то...  \r\n             if (EntityFactory.getCatalogs().get(MODULEMNEMO + \".SootvetstviyaSchetov\").findByCode(Dt.getCode()).size() \u003e 0) {    \r\n                 KartDt \u003d EntityFactory.getCatalogs().get(MODULEMNEMO + \".SootvetstviyaSchetov\").findByCode(Dt.getCode());\r\n                 SubKartDt \u003d KartDt.get(0);\r\n                 \r\n                 if (EntityFactory.getCatalogs().get(MODULEMNEMO + \".KOSGUEKR\").findByCode(\"271\").size() \u003e 0) {    \r\n                     Ekr \u003d EntityFactory.getCatalogs().get(MODULEMNEMO + \".KOSGUEKR\").findByCode(\"271\").get(0);\r\n                 }\r\n                \r\n                 if (SubKartDt.get(MODULEMNEMO + \".SootvetstviyaSchetov.SchetZatrat\") !\u003d null) {\r\n                     let AccZatrat \u003d SubKartDt.get(MODULEMNEMO + \".SootvetstviyaSchetov.SchetZatrat\").getCode(); \r\n                     \r\n                     if (EntityFactory.getPlan().getAccounts().findByCode(AccZatrat).size() \u003e 0) {\r\n                         Debet \u003d EntityFactory.getPlan().getAccounts().findByCode(AccZatrat).get(0);                         \r\n                         DebetKosgu \u003d getKOSGUDebit(Debet);\r\n                         Debet \u003d SetAnaliticInAccount(Debet, \u0027KOSGUEKR\u0027, Ekr);\r\n                     }    \r\n                 }    \r\n             }  \r\n         }    \r\n         //ПО 2 ПРОВОДКЕ\r\n         if (summAmo \u003e 0) {    \r\n             Kredit \u003d null;\r\n             // по счету Кредит ищем счет амортизации в Соответствии счетов\r\n             if (EntityFactory.getCatalogs().get(MODULEMNEMO + \".SootvetstviyaSchetov\").findByCode(Dt.getCode()).size() \u003e 0) { \r\n                 if (SubKartDt.get(MODULEMNEMO + \".SootvetstviyaSchetov.SchetAmortizacii\") !\u003d null) {\r\n                     let AccAmo \u003d SubKartDt.get(MODULEMNEMO + \".SootvetstviyaSchetov.SchetAmortizacii\").getCode();                       \r\n                     \r\n                     if (EntityFactory.getPlan().getAccounts().findByCode(AccAmo).size() \u003e 0 ) {\r\n                         Kredit \u003d EntityFactory.getPlan().getAccounts().findByCode(AccAmo).get(0);                         \r\n                         KreditKosgu \u003d getKOSGUCredit(Kredit);\r\n                         Kredit \u003d fillAccountByAnalytics(Kredit, Dt);\r\n                     }    \r\n                     \r\n                 }    \r\n             \r\n             }\r\n             \r\n             //добавление проводки 2\r\n             let postingProps2 \u003d {\r\n                 tableRec,\r\n                 currentDocument,\r\n                 docMnemo: MODULEMNEMO + \u0027.\u0027 + DOCMNEMO,\r\n                 debitKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSKr\u0027).getCode(), \r\n                 debitKosgu: DebetKosgu ?? undefined,\r\n                 debit: Debet,\r\n                 creditKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSDb\u0027).getCode(),\r\n                 creditKosgu: KreditKosgu ?? undefined,\r\n                 credit: Kredit,\r\n                 summa: summAmo,\r\n             }\r\n            \r\n             //добавление проводки 2         \r\n             currentDocument.addPosting(createPostingWithProps(postingProps2));\r\n         } \r\n\r\n   \r\n        //------------------------\r\n        //ПО 3 ПРОВОДКЕ\r\n  \r\n    \r\n        //если стоимость меньше минимальной границы для 100%\r\n        //и счет дебет не попадает в список счетов....\r\n              \r\n        if (LcenMeneeBolee3000(currentDocument, tableRec, 1)) {              \r\n    \r\n            let Kr \u003d tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.Debet\u0027);                       \r\n            Kredit \u003d null;\r\n            \r\n            if (EntityFactory.getPlan().getAccounts().findByCode(Kr.getCode()).size() \u003e 0 ) {\r\n                Kredit \u003d EntityFactory.getPlan().getAccounts().findByCode(Kr.getCode()).get(0);                         \r\n                KreditKosgu \u003d getKOSGUCredit(Kredit);\r\n                Kredit \u003d fillAccountByAnalytics(Kredit, Dt);\r\n            }             \r\n            \r\n            //добавление проводки 3\r\n            let postingProps3 \u003d {\r\n                tableRec,\r\n                currentDocument,\r\n                docMnemo: MODULEMNEMO + \u0027.\u0027 + DOCMNEMO,\r\n                debitKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSKr\u0027).getCode(), \r\n                debitKosgu: DebetKosgu ?? undefined,\r\n                debit: Debet,\r\n                creditKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSDb\u0027).getCode(),\r\n                creditKosgu: KreditKosgu ?? undefined,\r\n                credit: Kredit,\r\n                summa: summs,\r\n            }\r\n            \r\n            //добавление проводки 3         \r\n            currentDocument.addPosting(createPostingWithProps(postingProps3));\r\n             \r\n            //ПО 4 ПРОВОДКЕ\r\n            //добавление проводки 4\r\n            if (SubKartDt.get(MODULEMNEMO + \".SootvetstviyaSchetov.SchetZabalansovyii\") !\u003d null) {\r\n                let AccZabal \u003d SubKartDt.get(MODULEMNEMO + \".SootvetstviyaSchetov.SchetZabalansovyii\").getCode(); \r\n                Debet \u003d null;     \r\n                if (EntityFactory.getPlan().getAccounts().findByCode(AccZabal).size() \u003e 0) {\r\n                    Debet \u003d EntityFactory.getPlan().getAccounts().findByCode(AccZabal).get(0);                         \r\n                    DebetKosgu \u003d getKOSGUDebit(Debet);\r\n                    Debet \u003d fillAccountByAnalytics(Debet, Dt);\r\n                }    \r\n            }             \r\n            \r\n            let postingProps4 \u003d {\r\n                tableRec,\r\n                currentDocument,\r\n                docMnemo: MODULEMNEMO + \u0027.\u0027 + DOCMNEMO,\r\n                debitKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSKr\u0027).getCode(), \r\n                debitKosgu: DebetKosgu ?? undefined,\r\n                debit: Debet,\r\n                creditKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSDb\u0027).getCode(),\r\n                creditKosgu: KreditZeroKosgu ?? undefined,\r\n                credit: KreditZero,\r\n                summa: summs,\r\n             }\r\n            \r\n             //добавление проводки 4         \r\n             currentDocument.addPosting(createPostingWithProps(postingProps4));             \r\n        }\r\n        \r\n        //ПО 5 ПРОВОДКЕ\r\n        //если второй счет, забаланс - не пустой...\r\n        if (tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.VtoroiiSchetZabalans\u0027) !\u003d null) {\r\n            //resultValidate.addValueError(\u0027---\u0027);\r\n            //return  resultValidate;              \r\n            let AccSecZabal \u003d tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.VtoroiiSchetZabalans\u0027).getCode(); \r\n            Debet \u003d null;\r\n            \r\n            if (EntityFactory.getPlan().getAccounts().findByCode(AccSecZabal).size() \u003e 0) {\r\n                Debet \u003d EntityFactory.getPlan().getAccounts().findByCode(AccSecZabal).get(0);                         \r\n                DebetKosgu \u003d getKOSGUDebit(Debet);\r\n                Debet \u003d fillAccountByAnalytics(Debet, Dt);\r\n            }    \r\n            \r\n            let postingProps5 \u003d {\r\n                tableRec,\r\n                currentDocument,\r\n                docMnemo: MODULEMNEMO + \u0027.\u0027 + DOCMNEMO,\r\n                debitKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSKr\u0027).getCode(), \r\n                debitKosgu: DebetKosgu ?? undefined,\r\n                debit: Debet,\r\n                creditKps: tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.KPSDb\u0027).getCode(),\r\n                creditKosgu: KreditZeroKosgu ?? undefined,\r\n                credit: KreditZero,\r\n                summa: summs,\r\n            }\r\n            \r\n            //добавление проводки 5         \r\n            currentDocument.addPosting(createPostingWithProps(postingProps5));            \r\n        }\r\n                \r\n        //Вычисление общей суммы операции\r\n        summ +\u003d +tableRec.get(MODULEMNEMO + \u0027.\u0027 + DOCMNEMO + \u0027.tr.Stoimost\u0027);            \r\n    };\r\n        \r\n    //устанавливаем текущую дату проводки\r\n    currentDocument.setExecuted();\r\n    //устанавливаем сумму операции\r\n    currentDocument.setOperationSum(summ);\r\n\r\n    //сохранение документа с проводками\r\n    currentDocument.save();\r\n    //   return  resultValidate;\r\n     \r\n    //resultValidate.addValueError(Ekr.getCode());\r\n    //return  resultValidate;       \r\n    return;  \r\n}\r\n\r\n"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "TestAndreii.NakladnyeNaVnutreneePeremeshenieOS.VnPeremeshenieVvodVEkspluataciiu",
    "title": {
      "ru_RU": "Внутреннее перемещение, ввод в эксплуатацию",
      "en_EN": "VnPeremeshenieVvodVEkspluataciiu"
    },
    "description": {}
  }
}