{
  "script": {
    "title": "script",
    "sources": "\r\n//Проведение документа\r\nfunction activate(currentDocument) {\r\n    let docMnemo \u003d currentDocument.getMnemo()  \r\n   \r\n    let documentValidateResult \u003d notValid(currentDocument)\r\n    if (documentValidateResult) {\r\n        return documentValidateResult;\r\n    }\r\n\r\n    for (let tableRec of currentDocument.getRows()){\r\n        \r\n        let docDebitAccount \u003d tableRec.get(docMnemo + \u0027.tr.Debet\u0027);\r\n        let docCreditAccount \u003d tableRec.get(docMnemo + \u0027.tr.Kredit\u0027);\r\n        let isCredit205Avans \u003d Boolean(EntityFactory.getCatalogs().get(MODULEMNEMO + \".SootvetstviyaSchetov\").findByRequisite(MODULEMNEMO + \u0027.SootvetstviyaSchetov.SchetAvansa\u0027, docCreditAccount)[0])\r\n                               \u0026\u0026 docCreditAccount?.getCode().startsWith(\u0027205\u0027); \r\n        \r\n        //1. типовая проводка\r\n        currentDocument.addPosting(createPostingWithProps({\r\n            tableRec, \r\n            currentDocument,\r\n        }));\r\n\r\n        //2. проводка если Кредит является счетом аванса 205хх из справочника \"Соответствия счетов\"\r\n        if (isCredit205Avans){\r\n            \r\n            let debit21011 \u003d fillAccountByAnalytics(EntityFactory.getPlan().getAccounts().findByCode(\u002721011\u0027).get(0), docDebitAccount);\r\n            let credit30304 \u003d fillAccountByAnalytics(EntityFactory.getPlan().getAccounts().findByCode(\u002730304\u0027).get(0), docCreditAccount)\r\n\r\n            currentDocument.addPosting(createPostingWithProps({\r\n                tableRec,\r\n                currentDocument,\r\n                debitKps: tableRec.get(docMnemo +  \u0027.tr.KPSKr\u0027).getCode(),\r\n                debit: debit21011,\r\n                creditKps: currentDocument.get(docMnemo + \u0027.hr.KPSDlyaScheta334\u0027)?.getCode(),\r\n                credit: credit30304,\r\n                summa: tableRec.get(docMnemo +  \u0027.tr.SummaNDS\u0027),\r\n            }));\r\n        }\r\n\r\n        //3. проводка при сумме оплаты картой не равной 0\r\n        if (currentDocument.get(docMnemo + \u0027.hr.SummaOplatyPlastKartoii\u0027)){\r\n           \r\n            // попытка установить в счет расчетов с заказчиками аналитик из полей документа Договор, Счет-фактура и Плательщик\r\n            let SchetRaschetySZakazchikami \u003d currentDocument.get( docMnemo + \u0027.hr.SchetRaschetySZakazchikami\u0027);\r\n            let dogovor \u003d currentDocument.get( docMnemo + \u0027.hr.Dogovor\u0027);\r\n            let schetfaktura \u003d currentDocument.get( docMnemo + \u0027.hr.Schetfaktura\u0027);\r\n            let platelshik \u003d currentDocument.get( docMnemo + \u0027.hr.Platelshik\u0027);\r\n                \r\n            SetAnaliticInAccount(SchetRaschetySZakazchikami, \u0027Kontragenty\u0027, platelshik);\r\n            SetAnaliticInAccount(SchetRaschetySZakazchikami, \u0027SchetafakturyVydannye\u0027, schetfaktura);\r\n            SetAnaliticInAccount(SchetRaschetySZakazchikami, \u0027DogovoryGoskontrakty\u0027, dogovor);\r\n                \r\n            // проверка на отсутсвие нуля в поле на которое делим при расчете суммы\r\n            let summa \u003d \"0\"\r\n            if (currentDocument.get( docMnemo + \u0027.hr.Summa\u0027) \u0026\u0026 currentDocument.get( docMnemo + \u0027.hr.Summa\u0027).toString() !\u003d\u003d \u00270\u0027){\r\n                summa \u003d currentDocument.get( docMnemo + \u0027.hr.SummaOplatyPlastKartoii\u0027)\r\n                            * tableRec.get(docMnemo +  \u0027.tr.Summa\u0027) / currentDocument.get( docMnemo + \u0027.hr.Summa\u0027)\r\n            } \r\n            \r\n            currentDocument.addPosting(createPostingWithProps({\r\n                tableRec, \r\n                currentDocument, \r\n                debitKps: tableRec.get(docMnemo +  \u0027.tr.KPSKr\u0027).getCode(),\r\n                debit: docCreditAccount, \r\n                creditKps: currentDocument.get(docMnemo + \u0027.hr.KPSKDB\u0027)?.getCode(),\r\n                credit: SchetRaschetySZakazchikami,\r\n                creditKosgu: currentDocument.get(docMnemo + \u0027.hr.KOSGUSRZ\u0027)?.getCode(),\r\n                summa,\r\n            }));\r\n        }\r\n\r\n        //проводки 4 и 5 при наличии комиссии и суммы оплаты картой\r\n        if (currentDocument.get( docMnemo + \u0027.hr.SummaKomissiiOplPlastKartoii\u0027) \u0026\u0026 currentDocument.get( docMnemo + \u0027.hr.SummaOplatyPlastKartoii\u0027 )){\r\n            \r\n            let acc21005 \u003d EntityFactory.getPlan().getAccounts().findByCode(\u002721005\u0027).get(0);\r\n            let debit21005 \u003d fillAccountByAnalytics(acc21005, docDebitAccount);\r\n            let summa \u003d \"0\"\r\n            // проверка на отсутсвие нуля в поле на которое делим при расчете суммы\r\n            if (currentDocument.get( docMnemo + \u0027.hr.Summa\u0027) \u0026\u0026 currentDocument.get( docMnemo + \u0027.hr.Summa\u0027).toString() !\u003d\u003d \u00270\u0027){\r\n               summa \u003d  currentDocument.get( docMnemo + \u0027.hr.SummaKomissiiOplPlastKartoii\u0027) * \r\n                        tableRec.get(docMnemo +  \u0027.tr.Summa\u0027) / \r\n                        currentDocument.get( docMnemo + \u0027.hr.Summa\u0027)\r\n            }\r\n            //4. проводка дебет \u003d 21005\r\n            currentDocument.addPosting(createPostingWithProps({\r\n                tableRec, \r\n                currentDocument, \r\n                debitKps: currentDocument.get( docMnemo + \u0027.hr.KPSKDB\u0027)?.getCode(),\r\n                debit: debit21005,\r\n                summa,\r\n            }))\r\n            //5. проводка  дебет \u003d счет расходов при оплате картой\r\n            let credit21005 \u003d fillAccountByAnalytics(acc21005, docCreditAccount);\r\n            //косгу дебета: если счет с косгу дебета по умолчанию, то используется этот косгу, если счет с аналитикой ЭКР, то и в аналитике и в КОСГУ используется ЭКР 226\r\n            let SchetRashodovOplatPlastKartoii \u003d currentDocument.get( docMnemo + \u0027.hr.SchetRashodovOplatPlastKartoii\u0027 );\r\n            let debitKOSGU;\r\n            if (SchetRashodovOplatPlastKartoii){\r\n                let defaultDebitKosgu \u003d getKOSGUDebit(SchetRashodovOplatPlastKartoii); \r\n                if (defaultDebitKosgu){\r\n                    debitKOSGU \u003d defaultDebitKosgu;\r\n                } else {\r\n                    let kosgu226 \u003d EntityFactory.getCatalogs().get(MODULEMNEMO + \".KOSGUEKR\").findByCode(\u0027226\u0027)[0];\r\n                    for (let i \u003d 0; i \u003c MAXANALYTICSCOUNT; i++){\r\n                        if (EntityFactory.getPlan().getAccounts().getAnalyticMnemo(SchetRashodovOplatPlastKartoii.getCode(), i) \u003d\u003d\u003d MODULEMNEMO + \u0027.KOSGUEKR\u0027){\r\n                            SchetRashodovOplatPlastKartoii.put(i, kosgu226); \r\n                            debitKOSGU \u003d \u0027226\u0027;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            currentDocument.addPosting(createPostingWithProps({\r\n                tableRec,  \r\n                currentDocument, \r\n                debitKps: currentDocument.get( docMnemo + \u0027.hr.KPSKRB\u0027)?.getCode(),\r\n                debit: SchetRashodovOplatPlastKartoii,\r\n                debitKosgu: debitKOSGU,\r\n                creditKps: currentDocument.get( docMnemo + \u0027.hr.KPSKDB\u0027)?.getCode(),\r\n                credit: credit21005,\r\n                summa,\r\n            }))\r\n            \r\n        } \r\n    };\r\n    \r\n    let postingsValidateResult \u003d hasNotValidPostings(currentDocument)\r\n    if(postingsValidateResult){\r\n        return postingsValidateResult;\r\n    }\r\n    //устанавливаем текущую дату проводки\r\n    currentDocument.setExecuted();\r\n    //устанавливаем сумму операции\r\n    currentDocument.setOperationSum(getCalculatedSum(currentDocument, docMnemo + \u0027.tr.Summa\u0027));\r\n    //сохранение документа с проводками\r\n    currentDocument.save();\r\n}"
  },
  "template": {
    "universal": false,
    "date": {
      "celltype": "OPERATION_DATE",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "number": {
      "celltype": "OPERATION_NUMBER",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "summ": {
      "celltype": "OPERATION_SUM",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operation_description": {
      "celltype": "OPERATION_DESCRIPTION",
      "formulaEnabled": "true",
      "sourceMnemo": "",
      "prompt": {},
      "index": 0
    },
    "operations": []
  },
  "runastemplate": false,
  "grants": {},
  "meta": {
    "mnemo": "TestAndreii.PlatezhnyePorucheniyapostuplenieNaSchet.UchetCHPP",
    "title": {
      "ru_RU": "Учет ЧПП",
      "en_EN": "Uchet CHPP"
    },
    "description": {}
  }
}